- alias: 'Spotify Volume (Set)'
  trigger:
    platform: state
    entity_id: input_number.spotify_volume
  action:
    service: media_player.volume_set
    data_template:
      entity_id: media_player.spotify
      volume_level: '{{  states.input_number.spotify_volume.state | int / 100  }}'

- alias: 'Spotify Volume (Sync)'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.spotify_volume
  action:
    - delay:
        seconds: 5
    - service: input_number.set_value
      data_template:
        entity_id: input_number.spotify_volume
        value: '{{  states.sensor.spotify_volume.state | float | round(2) * 100  }}'

- alias: 'Spotify Shuffle (Set)'
  trigger:
    platform: state
    entity_id: input_boolean.spotify_shuffle
  action:
    service: media_player.shuffle_set
    data_template:
      entity_id: media_player.spotify
      shuffle: >
        {% if is_state('input_boolean.spotify_shuffle', 'off') %} 
        false
        {% elif is_state('input_boolean.spotify_shuffle', 'on') %}
        true
        {% endif %}

- alias: 'Spotify Shuffle (Sync)'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.spotify_shuffle
  action:
    - delay:
        seconds: 5
    - service_template: >
        {% if states.sensor.spotify_shuffle.state == 'False' %}
          input_boolean.turn_off
        {% else %}
          input_boolean.turn_on
        {% endif %}
      data:
        entity_id: input_boolean.spotify_shuffle

- alias: 'Spotify Source (Sync)'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sensor.spotify_source
  action:
    service: input_select.select_option
    entity_id: input_select.spotify_source
    data_template:
      option: '{{  states.sensor.spotify_source.state  }}'
